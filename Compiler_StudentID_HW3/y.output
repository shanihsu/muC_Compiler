Terminals unused in grammar

    TRUE
    FALSE
    RETURN


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: StatementList Statement
    3              | %empty

    4 Type: TypeName

    5 TypeName: INT
    6         | FLOAT
    7         | STRING
    8         | BOOL

    9 Literal: INT_LIT
   10        | FLOAT_LIT
   11        | STRING_LIT
   12        | BOOL_LIT

   13 Statement: DeclarationStmt
   14          | AssignmentStmt
   15          | IncDecStmt
   16          | IfStmt
   17          | WhileStmt
   18          | ForStmt
   19          | PrintStmt
   20          | Expression SEMICOLON

   21 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON

   22 Expression: Expression or_op Expression1
   23           | Expression1

   24 Expression1: Expression1 and_op Expression2
   25            | Expression2

   26 Expression2: Expression2 cmp_op Expression3
   27            | Expression3

   28 Expression3: Expression3 add_op Expression4
   29            | Expression4

   30 Expression4: Expression4 mul_op Expression5
   31            | Expression5

   32 Expression5: UnaryExpr

   33 UnaryExpr: PrimaryExpr

   34 $@1: %empty

   35 UnaryExpr: unary_op $@1 UnaryExpr

   36 binary_op: or_op
   37          | and_op
   38          | cmp_op
   39          | add_op
   40          | mul_op

   41 or_op: OR

   42 and_op: AND

   43 cmp_op: EQL
   44       | NEQ
   45       | LEQ
   46       | GEQ
   47       | LSS
   48       | GTR

   49 add_op: ADD
   50       | SUB

   51 mul_op: MUL
   52       | QUO
   53       | REM

   54 unary_op: ADD
   55         | SUB
   56         | NOT

   57 PrimaryExpr: Operand
   58            | IndexExpr
   59            | ConversionExpr

   60 Operand: '"' Literal '"'
   61        | Literal
   62        | IDENT
   63        | LPAREN Expression RPAREN

   64 IndexExpr: PrimaryExpr LBRACK Expression RBRACK

   65 ConversionExpr: LPAREN Type RPAREN IDENT
   66               | LPAREN Type RPAREN Literal

   67 DeclarationStmt: Type IDENT SEMICOLON
   68                | Type IDENT ASSIGN Expression SEMICOLON
   69                | Type IDENT LBRACK Expression RBRACK SEMICOLON

   70 AssignmentExpr: Expression assign_op Expression

   71 AssignmentStmt: AssignmentExpr SEMICOLON

   72 assign_op: ASSIGN
   73          | ADD_ASSIGN
   74          | SUB_ASSIGN
   75          | MUL_ASSIGN
   76          | QUO_ASSIGN
   77          | REM_ASSIGN

   78 IncDecExpr: IDENT INC
   79           | IDENT DEC

   80 IncDecStmt: IncDecExpr SEMICOLON

   81 $@2: %empty

   82 Block: LBRACE $@2 StatementList RBRACE

   83 IfStmt: IF LPAREN Condition RPAREN Block
   84       | IF LPAREN Condition RPAREN Block ELSE IfStmt
   85       | IF LPAREN Condition RPAREN Block ELSE Block

   86 Condition: Operand binary_op Operand
   87          | UnaryExpr

   88 WhileStmt: WHILE LPAREN Condition RPAREN Block

   89 ForStmt: FOR LPAREN ForClause RPAREN Block

   90 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   91 InitStmt: SimpleExpr

   92 PostStmt: SimpleExpr

   93 SimpleExpr: AssignmentExpr
   94           | Expression
   95           | IncDecExpr


Terminals, with rules where they appear

    $end (0) 0
    '"' (34) 60
    error (256)
    INT <type_val> (258) 5
    FLOAT <type_val> (259) 6
    BOOL <type_val> (260) 8
    STRING <type_val> (261) 7
    ASSIGN <type_val> (262) 68 72
    ADD_ASSIGN <type_val> (263) 73
    SUB_ASSIGN <type_val> (264) 74
    MUL_ASSIGN <type_val> (265) 75
    QUO_ASSIGN <type_val> (266) 76
    REM_ASSIGN <type_val> (267) 77
    SEMICOLON (268) 20 21 67 68 69 71 80 90
    LPAREN (269) 21 63 65 66 83 84 85 88 89
    RPAREN (270) 21 63 65 66 83 84 85 88 89
    LBRACK (271) 64 69
    RBRACK (272) 64 69
    LBRACE (273) 82
    RBRACE (274) 82
    OR <type_val> (275) 41
    AND <type_val> (276) 42
    EQL <type_val> (277) 43
    NEQ <type_val> (278) 44
    LEQ <type_val> (279) 45
    GEQ <type_val> (280) 46
    LSS <type_val> (281) 47
    GTR <type_val> (282) 48
    NOT <type_val> (283) 56
    IF (284) 83 84 85
    ELSE (285) 84 85
    FOR (286) 89
    WHILE (287) 88
    TRUE (288)
    FALSE (289)
    RETURN (290)
    INT_LIT <i_val> (291) 9
    FLOAT_LIT <f_val> (292) 10
    STRING_LIT <s_val> (293) 11
    BOOL_LIT <s_val> (294) 12
    IDENT <ident_val> (295) 62 65 67 68 69 78 79
    INC <type_val> (296) 78
    DEC <type_val> (297) 79
    ADD <type_val> (298) 49 54
    SUB <type_val> (299) 50 55
    MUL <type_val> (300) 51
    QUO <type_val> (301) 52
    REM <type_val> (302) 53
    PRINT <type_val> (303) 21


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    Program (51)
        on left: 1
        on right: 0
    StatementList (52)
        on left: 2 3
        on right: 1 2 82
    Type <type_val> (53)
        on left: 4
        on right: 65 66 67 68 69
    TypeName <type_val> (54)
        on left: 5 6 7 8
        on right: 4
    Literal <type_val> (55)
        on left: 9 10 11 12
        on right: 60 61 66
    Statement (56)
        on left: 13 14 15 16 17 18 19 20
        on right: 2
    PrintStmt (57)
        on left: 21
        on right: 19
    Expression <type_val> (58)
        on left: 22 23
        on right: 20 21 22 63 64 68 69 70 94
    Expression1 <type_val> (59)
        on left: 24 25
        on right: 22 23 24
    Expression2 <type_val> (60)
        on left: 26 27
        on right: 24 25 26
    Expression3 <type_val> (61)
        on left: 28 29
        on right: 26 27 28
    Expression4 <type_val> (62)
        on left: 30 31
        on right: 28 29 30
    Expression5 <type_val> (63)
        on left: 32
        on right: 30 31
    UnaryExpr <type_val> (64)
        on left: 33 35
        on right: 32 35 87
    $@1 (65)
        on left: 34
        on right: 35
    binary_op <type_val> (66)
        on left: 36 37 38 39 40
        on right: 86
    or_op <type_val> (67)
        on left: 41
        on right: 22 36
    and_op <type_val> (68)
        on left: 42
        on right: 24 37
    cmp_op <type_val> (69)
        on left: 43 44 45 46 47 48
        on right: 26 38
    add_op <type_val> (70)
        on left: 49 50
        on right: 28 39
    mul_op <type_val> (71)
        on left: 51 52 53
        on right: 30 40
    unary_op <type_val> (72)
        on left: 54 55 56
        on right: 35
    PrimaryExpr <type_val> (73)
        on left: 57 58 59
        on right: 33 64
    Operand <type_val> (74)
        on left: 60 61 62 63
        on right: 57 86
    IndexExpr <type_val> (75)
        on left: 64
        on right: 58
    ConversionExpr <type_val> (76)
        on left: 65 66
        on right: 59
    DeclarationStmt (77)
        on left: 67 68 69
        on right: 13
    AssignmentExpr (78)
        on left: 70
        on right: 71 93
    AssignmentStmt (79)
        on left: 71
        on right: 14
    assign_op <type_val> (80)
        on left: 72 73 74 75 76 77
        on right: 70
    IncDecExpr (81)
        on left: 78 79
        on right: 80 95
    IncDecStmt (82)
        on left: 80
        on right: 15
    Block (83)
        on left: 82
        on right: 83 84 85 88 89
    $@2 (84)
        on left: 81
        on right: 82
    IfStmt (85)
        on left: 83 84 85
        on right: 16 84
    Condition (86)
        on left: 86 87
        on right: 83 84 85 88 90
    WhileStmt (87)
        on left: 88
        on right: 17
    ForStmt (88)
        on left: 89
        on right: 18
    ForClause (89)
        on left: 90
        on right: 89
    InitStmt (90)
        on left: 91
        on right: 90
    PostStmt (91)
        on left: 92
        on right: 90
    SimpleExpr (92)
        on left: 93 94 95
        on right: 91 92


State 0

    0 $accept: . Program $end

    $default  reduce using rule 3 (StatementList)

    Program        go to state 1
    StatementList  go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    1 Program: StatementList .
    2 StatementList: StatementList . Statement

    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 17
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    PRINT       shift, and go to state 20
    '"'         shift, and go to state 21

    $default  reduce using rule 1 (Program)

    Type             go to state 22
    TypeName         go to state 23
    Literal          go to state 24
    Statement        go to state 25
    PrintStmt        go to state 26
    Expression       go to state 27
    Expression1      go to state 28
    Expression2      go to state 29
    Expression3      go to state 30
    Expression4      go to state 31
    Expression5      go to state 32
    UnaryExpr        go to state 33
    unary_op         go to state 34
    PrimaryExpr      go to state 35
    Operand          go to state 36
    IndexExpr        go to state 37
    ConversionExpr   go to state 38
    DeclarationStmt  go to state 39
    AssignmentExpr   go to state 40
    AssignmentStmt   go to state 41
    IncDecExpr       go to state 42
    IncDecStmt       go to state 43
    IfStmt           go to state 44
    WhileStmt        go to state 45
    ForStmt          go to state 46


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    5 TypeName: INT .

    $default  reduce using rule 5 (TypeName)


State 5

    6 TypeName: FLOAT .

    $default  reduce using rule 6 (TypeName)


State 6

    8 TypeName: BOOL .

    $default  reduce using rule 8 (TypeName)


State 7

    7 TypeName: STRING .

    $default  reduce using rule 7 (TypeName)


State 8

   63 Operand: LPAREN . Expression RPAREN
   65 ConversionExpr: LPAREN . Type RPAREN IDENT
   66               | LPAREN . Type RPAREN Literal

    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Type            go to state 48
    TypeName        go to state 23
    Literal         go to state 24
    Expression      go to state 49
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 9

   56 unary_op: NOT .

    $default  reduce using rule 56 (unary_op)


State 10

   83 IfStmt: IF . LPAREN Condition RPAREN Block
   84       | IF . LPAREN Condition RPAREN Block ELSE IfStmt
   85       | IF . LPAREN Condition RPAREN Block ELSE Block

    LPAREN  shift, and go to state 50


State 11

   89 ForStmt: FOR . LPAREN ForClause RPAREN Block

    LPAREN  shift, and go to state 51


State 12

   88 WhileStmt: WHILE . LPAREN Condition RPAREN Block

    LPAREN  shift, and go to state 52


State 13

    9 Literal: INT_LIT .

    $default  reduce using rule 9 (Literal)


State 14

   10 Literal: FLOAT_LIT .

    $default  reduce using rule 10 (Literal)


State 15

   11 Literal: STRING_LIT .

    $default  reduce using rule 11 (Literal)


State 16

   12 Literal: BOOL_LIT .

    $default  reduce using rule 12 (Literal)


State 17

   62 Operand: IDENT .
   78 IncDecExpr: IDENT . INC
   79           | IDENT . DEC

    INC  shift, and go to state 53
    DEC  shift, and go to state 54

    $default  reduce using rule 62 (Operand)


State 18

   54 unary_op: ADD .

    $default  reduce using rule 54 (unary_op)


State 19

   55 unary_op: SUB .

    $default  reduce using rule 55 (unary_op)


State 20

   21 PrintStmt: PRINT . LPAREN Expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 55


State 21

   60 Operand: '"' . Literal '"'

    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16

    Literal  go to state 56


State 22

   67 DeclarationStmt: Type . IDENT SEMICOLON
   68                | Type . IDENT ASSIGN Expression SEMICOLON
   69                | Type . IDENT LBRACK Expression RBRACK SEMICOLON

    IDENT  shift, and go to state 57


State 23

    4 Type: TypeName .

    $default  reduce using rule 4 (Type)


State 24

   61 Operand: Literal .

    $default  reduce using rule 61 (Operand)


State 25

    2 StatementList: StatementList Statement .

    $default  reduce using rule 2 (StatementList)


State 26

   19 Statement: PrintStmt .

    $default  reduce using rule 19 (Statement)


State 27

   20 Statement: Expression . SEMICOLON
   22 Expression: Expression . or_op Expression1
   70 AssignmentExpr: Expression . assign_op Expression

    ASSIGN      shift, and go to state 58
    ADD_ASSIGN  shift, and go to state 59
    SUB_ASSIGN  shift, and go to state 60
    MUL_ASSIGN  shift, and go to state 61
    QUO_ASSIGN  shift, and go to state 62
    REM_ASSIGN  shift, and go to state 63
    SEMICOLON   shift, and go to state 64
    OR          shift, and go to state 65

    or_op      go to state 66
    assign_op  go to state 67


State 28

   23 Expression: Expression1 .
   24 Expression1: Expression1 . and_op Expression2

    AND  shift, and go to state 68

    $default  reduce using rule 23 (Expression)

    and_op  go to state 69


State 29

   25 Expression1: Expression2 .
   26 Expression2: Expression2 . cmp_op Expression3

    EQL  shift, and go to state 70
    NEQ  shift, and go to state 71
    LEQ  shift, and go to state 72
    GEQ  shift, and go to state 73
    LSS  shift, and go to state 74
    GTR  shift, and go to state 75

    $default  reduce using rule 25 (Expression1)

    cmp_op  go to state 76


State 30

   27 Expression2: Expression3 .
   28 Expression3: Expression3 . add_op Expression4

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 27 (Expression2)

    add_op  go to state 79


State 31

   29 Expression3: Expression4 .
   30 Expression4: Expression4 . mul_op Expression5

    MUL  shift, and go to state 80
    QUO  shift, and go to state 81
    REM  shift, and go to state 82

    $default  reduce using rule 29 (Expression3)

    mul_op  go to state 83


State 32

   31 Expression4: Expression5 .

    $default  reduce using rule 31 (Expression4)


State 33

   32 Expression5: UnaryExpr .

    $default  reduce using rule 32 (Expression5)


State 34

   35 UnaryExpr: unary_op . $@1 UnaryExpr

    $default  reduce using rule 34 ($@1)

    $@1  go to state 84


State 35

   33 UnaryExpr: PrimaryExpr .
   64 IndexExpr: PrimaryExpr . LBRACK Expression RBRACK

    LBRACK  shift, and go to state 85

    $default  reduce using rule 33 (UnaryExpr)


State 36

   57 PrimaryExpr: Operand .

    $default  reduce using rule 57 (PrimaryExpr)


State 37

   58 PrimaryExpr: IndexExpr .

    $default  reduce using rule 58 (PrimaryExpr)


State 38

   59 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 59 (PrimaryExpr)


State 39

   13 Statement: DeclarationStmt .

    $default  reduce using rule 13 (Statement)


State 40

   71 AssignmentStmt: AssignmentExpr . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 41

   14 Statement: AssignmentStmt .

    $default  reduce using rule 14 (Statement)


State 42

   80 IncDecStmt: IncDecExpr . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 43

   15 Statement: IncDecStmt .

    $default  reduce using rule 15 (Statement)


State 44

   16 Statement: IfStmt .

    $default  reduce using rule 16 (Statement)


State 45

   17 Statement: WhileStmt .

    $default  reduce using rule 17 (Statement)


State 46

   18 Statement: ForStmt .

    $default  reduce using rule 18 (Statement)


State 47

   62 Operand: IDENT .

    $default  reduce using rule 62 (Operand)


State 48

   65 ConversionExpr: LPAREN Type . RPAREN IDENT
   66               | LPAREN Type . RPAREN Literal

    RPAREN  shift, and go to state 88


State 49

   22 Expression: Expression . or_op Expression1
   63 Operand: LPAREN Expression . RPAREN

    RPAREN  shift, and go to state 89
    OR      shift, and go to state 65

    or_op  go to state 66


State 50

   83 IfStmt: IF LPAREN . Condition RPAREN Block
   84       | IF LPAREN . Condition RPAREN Block ELSE IfStmt
   85       | IF LPAREN . Condition RPAREN Block ELSE Block

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    UnaryExpr       go to state 90
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 91
    IndexExpr       go to state 37
    ConversionExpr  go to state 38
    Condition       go to state 92


State 51

   89 ForStmt: FOR LPAREN . ForClause RPAREN Block

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 17
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 93
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38
    AssignmentExpr  go to state 94
    IncDecExpr      go to state 95
    ForClause       go to state 96
    InitStmt        go to state 97
    SimpleExpr      go to state 98


State 52

   88 WhileStmt: WHILE LPAREN . Condition RPAREN Block

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    UnaryExpr       go to state 90
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 91
    IndexExpr       go to state 37
    ConversionExpr  go to state 38
    Condition       go to state 99


State 53

   78 IncDecExpr: IDENT INC .

    $default  reduce using rule 78 (IncDecExpr)


State 54

   79 IncDecExpr: IDENT DEC .

    $default  reduce using rule 79 (IncDecExpr)


State 55

   21 PrintStmt: PRINT LPAREN . Expression RPAREN SEMICOLON

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 100
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 56

   60 Operand: '"' Literal . '"'

    '"'  shift, and go to state 101


State 57

   67 DeclarationStmt: Type IDENT . SEMICOLON
   68                | Type IDENT . ASSIGN Expression SEMICOLON
   69                | Type IDENT . LBRACK Expression RBRACK SEMICOLON

    ASSIGN     shift, and go to state 102
    SEMICOLON  shift, and go to state 103
    LBRACK     shift, and go to state 104


State 58

   72 assign_op: ASSIGN .

    $default  reduce using rule 72 (assign_op)


State 59

   73 assign_op: ADD_ASSIGN .

    $default  reduce using rule 73 (assign_op)


State 60

   74 assign_op: SUB_ASSIGN .

    $default  reduce using rule 74 (assign_op)


State 61

   75 assign_op: MUL_ASSIGN .

    $default  reduce using rule 75 (assign_op)


State 62

   76 assign_op: QUO_ASSIGN .

    $default  reduce using rule 76 (assign_op)


State 63

   77 assign_op: REM_ASSIGN .

    $default  reduce using rule 77 (assign_op)


State 64

   20 Statement: Expression SEMICOLON .

    $default  reduce using rule 20 (Statement)


State 65

   41 or_op: OR .

    $default  reduce using rule 41 (or_op)


State 66

   22 Expression: Expression or_op . Expression1

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression1     go to state 105
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 67

   70 AssignmentExpr: Expression assign_op . Expression

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 106
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 68

   42 and_op: AND .

    $default  reduce using rule 42 (and_op)


State 69

   24 Expression1: Expression1 and_op . Expression2

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression2     go to state 107
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 70

   43 cmp_op: EQL .

    $default  reduce using rule 43 (cmp_op)


State 71

   44 cmp_op: NEQ .

    $default  reduce using rule 44 (cmp_op)


State 72

   45 cmp_op: LEQ .

    $default  reduce using rule 45 (cmp_op)


State 73

   46 cmp_op: GEQ .

    $default  reduce using rule 46 (cmp_op)


State 74

   47 cmp_op: LSS .

    $default  reduce using rule 47 (cmp_op)


State 75

   48 cmp_op: GTR .

    $default  reduce using rule 48 (cmp_op)


State 76

   26 Expression2: Expression2 cmp_op . Expression3

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression3     go to state 108
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 77

   49 add_op: ADD .

    $default  reduce using rule 49 (add_op)


State 78

   50 add_op: SUB .

    $default  reduce using rule 50 (add_op)


State 79

   28 Expression3: Expression3 add_op . Expression4

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression4     go to state 109
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 80

   51 mul_op: MUL .

    $default  reduce using rule 51 (mul_op)


State 81

   52 mul_op: QUO .

    $default  reduce using rule 52 (mul_op)


State 82

   53 mul_op: REM .

    $default  reduce using rule 53 (mul_op)


State 83

   30 Expression4: Expression4 mul_op . Expression5

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression5     go to state 110
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 84

   35 UnaryExpr: unary_op $@1 . UnaryExpr

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    UnaryExpr       go to state 111
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 85

   64 IndexExpr: PrimaryExpr LBRACK . Expression RBRACK

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 112
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 86

   71 AssignmentStmt: AssignmentExpr SEMICOLON .

    $default  reduce using rule 71 (AssignmentStmt)


State 87

   80 IncDecStmt: IncDecExpr SEMICOLON .

    $default  reduce using rule 80 (IncDecStmt)


State 88

   65 ConversionExpr: LPAREN Type RPAREN . IDENT
   66               | LPAREN Type RPAREN . Literal

    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 113

    Literal  go to state 114


State 89

   63 Operand: LPAREN Expression RPAREN .

    $default  reduce using rule 63 (Operand)


State 90

   87 Condition: UnaryExpr .

    $default  reduce using rule 87 (Condition)


State 91

   57 PrimaryExpr: Operand .
   86 Condition: Operand . binary_op Operand

    OR   shift, and go to state 65
    AND  shift, and go to state 68
    EQL  shift, and go to state 70
    NEQ  shift, and go to state 71
    LEQ  shift, and go to state 72
    GEQ  shift, and go to state 73
    LSS  shift, and go to state 74
    GTR  shift, and go to state 75
    ADD  shift, and go to state 77
    SUB  shift, and go to state 78
    MUL  shift, and go to state 80
    QUO  shift, and go to state 81
    REM  shift, and go to state 82

    $default  reduce using rule 57 (PrimaryExpr)

    binary_op  go to state 115
    or_op      go to state 116
    and_op     go to state 117
    cmp_op     go to state 118
    add_op     go to state 119
    mul_op     go to state 120


State 92

   83 IfStmt: IF LPAREN Condition . RPAREN Block
   84       | IF LPAREN Condition . RPAREN Block ELSE IfStmt
   85       | IF LPAREN Condition . RPAREN Block ELSE Block

    RPAREN  shift, and go to state 121


State 93

   22 Expression: Expression . or_op Expression1
   70 AssignmentExpr: Expression . assign_op Expression
   94 SimpleExpr: Expression .

    ASSIGN      shift, and go to state 58
    ADD_ASSIGN  shift, and go to state 59
    SUB_ASSIGN  shift, and go to state 60
    MUL_ASSIGN  shift, and go to state 61
    QUO_ASSIGN  shift, and go to state 62
    REM_ASSIGN  shift, and go to state 63
    OR          shift, and go to state 65

    $default  reduce using rule 94 (SimpleExpr)

    or_op      go to state 66
    assign_op  go to state 67


State 94

   93 SimpleExpr: AssignmentExpr .

    $default  reduce using rule 93 (SimpleExpr)


State 95

   95 SimpleExpr: IncDecExpr .

    $default  reduce using rule 95 (SimpleExpr)


State 96

   89 ForStmt: FOR LPAREN ForClause . RPAREN Block

    RPAREN  shift, and go to state 122


State 97

   90 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 123


State 98

   91 InitStmt: SimpleExpr .

    $default  reduce using rule 91 (InitStmt)


State 99

   88 WhileStmt: WHILE LPAREN Condition . RPAREN Block

    RPAREN  shift, and go to state 124


State 100

   21 PrintStmt: PRINT LPAREN Expression . RPAREN SEMICOLON
   22 Expression: Expression . or_op Expression1

    RPAREN  shift, and go to state 125
    OR      shift, and go to state 65

    or_op  go to state 66


State 101

   60 Operand: '"' Literal '"' .

    $default  reduce using rule 60 (Operand)


State 102

   68 DeclarationStmt: Type IDENT ASSIGN . Expression SEMICOLON

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 126
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 103

   67 DeclarationStmt: Type IDENT SEMICOLON .

    $default  reduce using rule 67 (DeclarationStmt)


State 104

   69 DeclarationStmt: Type IDENT LBRACK . Expression RBRACK SEMICOLON

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 127
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 105

   22 Expression: Expression or_op Expression1 .
   24 Expression1: Expression1 . and_op Expression2

    AND  shift, and go to state 68

    $default  reduce using rule 22 (Expression)

    and_op  go to state 69


State 106

   22 Expression: Expression . or_op Expression1
   70 AssignmentExpr: Expression assign_op Expression .

    OR  shift, and go to state 65

    $default  reduce using rule 70 (AssignmentExpr)

    or_op  go to state 66


State 107

   24 Expression1: Expression1 and_op Expression2 .
   26 Expression2: Expression2 . cmp_op Expression3

    EQL  shift, and go to state 70
    NEQ  shift, and go to state 71
    LEQ  shift, and go to state 72
    GEQ  shift, and go to state 73
    LSS  shift, and go to state 74
    GTR  shift, and go to state 75

    $default  reduce using rule 24 (Expression1)

    cmp_op  go to state 76


State 108

   26 Expression2: Expression2 cmp_op Expression3 .
   28 Expression3: Expression3 . add_op Expression4

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 26 (Expression2)

    add_op  go to state 79


State 109

   28 Expression3: Expression3 add_op Expression4 .
   30 Expression4: Expression4 . mul_op Expression5

    MUL  shift, and go to state 80
    QUO  shift, and go to state 81
    REM  shift, and go to state 82

    $default  reduce using rule 28 (Expression3)

    mul_op  go to state 83


State 110

   30 Expression4: Expression4 mul_op Expression5 .

    $default  reduce using rule 30 (Expression4)


State 111

   35 UnaryExpr: unary_op $@1 UnaryExpr .

    $default  reduce using rule 35 (UnaryExpr)


State 112

   22 Expression: Expression . or_op Expression1
   64 IndexExpr: PrimaryExpr LBRACK Expression . RBRACK

    RBRACK  shift, and go to state 128
    OR      shift, and go to state 65

    or_op  go to state 66


State 113

   65 ConversionExpr: LPAREN Type RPAREN IDENT .

    $default  reduce using rule 65 (ConversionExpr)


State 114

   66 ConversionExpr: LPAREN Type RPAREN Literal .

    $default  reduce using rule 66 (ConversionExpr)


State 115

   86 Condition: Operand binary_op . Operand

    LPAREN      shift, and go to state 129
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    '"'         shift, and go to state 21

    Literal  go to state 24
    Operand  go to state 130


State 116

   36 binary_op: or_op .

    $default  reduce using rule 36 (binary_op)


State 117

   37 binary_op: and_op .

    $default  reduce using rule 37 (binary_op)


State 118

   38 binary_op: cmp_op .

    $default  reduce using rule 38 (binary_op)


State 119

   39 binary_op: add_op .

    $default  reduce using rule 39 (binary_op)


State 120

   40 binary_op: mul_op .

    $default  reduce using rule 40 (binary_op)


State 121

   83 IfStmt: IF LPAREN Condition RPAREN . Block
   84       | IF LPAREN Condition RPAREN . Block ELSE IfStmt
   85       | IF LPAREN Condition RPAREN . Block ELSE Block

    LBRACE  shift, and go to state 131

    Block  go to state 132


State 122

   89 ForStmt: FOR LPAREN ForClause RPAREN . Block

    LBRACE  shift, and go to state 131

    Block  go to state 133


State 123

   90 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    UnaryExpr       go to state 90
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 91
    IndexExpr       go to state 37
    ConversionExpr  go to state 38
    Condition       go to state 134


State 124

   88 WhileStmt: WHILE LPAREN Condition RPAREN . Block

    LBRACE  shift, and go to state 131

    Block  go to state 135


State 125

   21 PrintStmt: PRINT LPAREN Expression RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 136


State 126

   22 Expression: Expression . or_op Expression1
   68 DeclarationStmt: Type IDENT ASSIGN Expression . SEMICOLON

    SEMICOLON  shift, and go to state 137
    OR         shift, and go to state 65

    or_op  go to state 66


State 127

   22 Expression: Expression . or_op Expression1
   69 DeclarationStmt: Type IDENT LBRACK Expression . RBRACK SEMICOLON

    RBRACK  shift, and go to state 138
    OR      shift, and go to state 65

    or_op  go to state 66


State 128

   64 IndexExpr: PrimaryExpr LBRACK Expression RBRACK .

    $default  reduce using rule 64 (IndexExpr)


State 129

   63 Operand: LPAREN . Expression RPAREN

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 49
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 130

   86 Condition: Operand binary_op Operand .

    $default  reduce using rule 86 (Condition)


State 131

   82 Block: LBRACE . $@2 StatementList RBRACE

    $default  reduce using rule 81 ($@2)

    $@2  go to state 139


State 132

   83 IfStmt: IF LPAREN Condition RPAREN Block .
   84       | IF LPAREN Condition RPAREN Block . ELSE IfStmt
   85       | IF LPAREN Condition RPAREN Block . ELSE Block

    ELSE  shift, and go to state 140

    $default  reduce using rule 83 (IfStmt)


State 133

   89 ForStmt: FOR LPAREN ForClause RPAREN Block .

    $default  reduce using rule 89 (ForStmt)


State 134

   90 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 141


State 135

   88 WhileStmt: WHILE LPAREN Condition RPAREN Block .

    $default  reduce using rule 88 (WhileStmt)


State 136

   21 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON .

    $default  reduce using rule 21 (PrintStmt)


State 137

   68 DeclarationStmt: Type IDENT ASSIGN Expression SEMICOLON .

    $default  reduce using rule 68 (DeclarationStmt)


State 138

   69 DeclarationStmt: Type IDENT LBRACK Expression RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 139

   82 Block: LBRACE $@2 . StatementList RBRACE

    $default  reduce using rule 3 (StatementList)

    StatementList  go to state 143


State 140

   84 IfStmt: IF LPAREN Condition RPAREN Block ELSE . IfStmt
   85       | IF LPAREN Condition RPAREN Block ELSE . Block

    LBRACE  shift, and go to state 131
    IF      shift, and go to state 10

    Block   go to state 144
    IfStmt  go to state 145


State 141

   90 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 17
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 93
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38
    AssignmentExpr  go to state 94
    IncDecExpr      go to state 95
    PostStmt        go to state 146
    SimpleExpr      go to state 147


State 142

   69 DeclarationStmt: Type IDENT LBRACK Expression RBRACK SEMICOLON .

    $default  reduce using rule 69 (DeclarationStmt)


State 143

    2 StatementList: StatementList . Statement
   82 Block: LBRACE $@2 StatementList . RBRACE

    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    LPAREN      shift, and go to state 8
    RBRACE      shift, and go to state 148
    NOT         shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 17
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    PRINT       shift, and go to state 20
    '"'         shift, and go to state 21

    Type             go to state 22
    TypeName         go to state 23
    Literal          go to state 24
    Statement        go to state 25
    PrintStmt        go to state 26
    Expression       go to state 27
    Expression1      go to state 28
    Expression2      go to state 29
    Expression3      go to state 30
    Expression4      go to state 31
    Expression5      go to state 32
    UnaryExpr        go to state 33
    unary_op         go to state 34
    PrimaryExpr      go to state 35
    Operand          go to state 36
    IndexExpr        go to state 37
    ConversionExpr   go to state 38
    DeclarationStmt  go to state 39
    AssignmentExpr   go to state 40
    AssignmentStmt   go to state 41
    IncDecExpr       go to state 42
    IncDecStmt       go to state 43
    IfStmt           go to state 44
    WhileStmt        go to state 45
    ForStmt          go to state 46


State 144

   85 IfStmt: IF LPAREN Condition RPAREN Block ELSE Block .

    $default  reduce using rule 85 (IfStmt)


State 145

   84 IfStmt: IF LPAREN Condition RPAREN Block ELSE IfStmt .

    $default  reduce using rule 84 (IfStmt)


State 146

   90 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 90 (ForClause)


State 147

   92 PostStmt: SimpleExpr .

    $default  reduce using rule 92 (PostStmt)


State 148

   82 Block: LBRACE $@2 StatementList RBRACE .

    $default  reduce using rule 82 (Block)
