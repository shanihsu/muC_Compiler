Terminals unused in grammar

    TRUE
    FALSE
    RETURN


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: StatementList Statement
    3              | %empty

    4 Type: TypeName

    5 TypeName: INT
    6         | FLOAT
    7         | STRING
    8         | BOOL

    9 Literal: INT_LIT
   10        | FLOAT_LIT
   11        | STRING_LIT
   12        | BOOL_LIT

   13 Statement: DeclarationStmt
   14          | AssignmentStmt
   15          | IncDecStmt
   16          | IfStmt
   17          | WhileStmt
   18          | ForStmt
   19          | PrintStmt
   20          | Expression SEMICOLON

   21 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON

   22 Expression: Expression or_op Expression1
   23           | Expression1

   24 Expression1: Expression1 and_op Expression2
   25            | Expression2

   26 Expression2: Expression2 cmp_op Expression3
   27            | Expression3

   28 Expression3: Expression3 add_op Expression4
   29            | Expression4

   30 Expression4: Expression4 mul_op Expression5
   31            | Expression5

   32 Expression5: UnaryExpr

   33 UnaryExpr: PrimaryExpr
   34          | unary_op UnaryExpr

   35 binary_op: or_op
   36          | and_op
   37          | cmp_op
   38          | add_op
   39          | mul_op

   40 or_op: OR

   41 and_op: AND

   42 cmp_op: EQL
   43       | NEQ
   44       | LEQ
   45       | GEQ
   46       | LSS
   47       | GTR

   48 add_op: ADD
   49       | SUB

   50 mul_op: MUL
   51       | QUO
   52       | REM

   53 unary_op: ADD
   54         | SUB
   55         | NOT

   56 PrimaryExpr: Operand
   57            | IndexExpr
   58            | ConversionExpr

   59 Operand: '"' Literal '"'
   60        | Literal
   61        | IDENT
   62        | LPAREN Expression RPAREN

   63 IndexExpr: PrimaryExpr LBRACK Expression RBRACK

   64 ConversionExpr: LPAREN Type RPAREN IDENT
   65               | LPAREN Type RPAREN Literal

   66 DeclarationStmt: Type IDENT SEMICOLON
   67                | Type IDENT ASSIGN Expression SEMICOLON
   68                | Type IDENT LBRACK Expression RBRACK SEMICOLON

   69 AssignmentExpr: Expression assign_op Expression

   70 AssignmentStmt: AssignmentExpr SEMICOLON

   71 assign_op: ASSIGN
   72          | ADD_ASSIGN
   73          | SUB_ASSIGN
   74          | MUL_ASSIGN
   75          | QUO_ASSIGN
   76          | REM_ASSIGN

   77 IncDecExpr: IDENT INC
   78           | IDENT DEC

   79 IncDecStmt: IncDecExpr SEMICOLON

   80 $@1: %empty

   81 Block: LBRACE $@1 StatementList RBRACE

   82 IfStmt: IF LPAREN Condition RPAREN Block
   83       | IF LPAREN Condition RPAREN Block ELSE IfStmt
   84       | IF LPAREN Condition RPAREN Block ELSE Block

   85 Condition: Operand binary_op Operand
   86          | UnaryExpr

   87 WhileStmt: WHILE LPAREN Condition RPAREN Block

   88 ForStmt: FOR LPAREN ForClause RPAREN Block

   89 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   90 InitStmt: SimpleExpr

   91 PostStmt: SimpleExpr

   92 SimpleExpr: AssignmentExpr
   93           | Expression
   94           | IncDecExpr


Terminals, with rules where they appear

    $end (0) 0
    '"' (34) 59
    error (256)
    INT <type_val> (258) 5
    FLOAT <type_val> (259) 6
    BOOL <type_val> (260) 8
    STRING <type_val> (261) 7
    ASSIGN <type_val> (262) 67 71
    ADD_ASSIGN <type_val> (263) 72
    SUB_ASSIGN <type_val> (264) 73
    MUL_ASSIGN <type_val> (265) 74
    QUO_ASSIGN <type_val> (266) 75
    REM_ASSIGN <type_val> (267) 76
    SEMICOLON (268) 20 21 66 67 68 70 79 89
    LPAREN (269) 21 62 64 65 82 83 84 87 88
    RPAREN (270) 21 62 64 65 82 83 84 87 88
    LBRACK (271) 63 68
    RBRACK (272) 63 68
    LBRACE (273) 81
    RBRACE (274) 81
    OR <type_val> (275) 40
    AND <type_val> (276) 41
    EQL <type_val> (277) 42
    NEQ <type_val> (278) 43
    LEQ <type_val> (279) 44
    GEQ <type_val> (280) 45
    LSS <type_val> (281) 46
    GTR <type_val> (282) 47
    NOT <type_val> (283) 55
    IF (284) 82 83 84
    ELSE (285) 83 84
    FOR (286) 88
    WHILE (287) 87
    TRUE (288)
    FALSE (289)
    RETURN (290)
    INT_LIT <i_val> (291) 9
    FLOAT_LIT <f_val> (292) 10
    STRING_LIT <s_val> (293) 11
    BOOL_LIT <s_val> (294) 12
    IDENT <ident_val> (295) 61 64 66 67 68 77 78
    INC <type_val> (296) 77
    DEC <type_val> (297) 78
    ADD <type_val> (298) 48 53
    SUB <type_val> (299) 49 54
    MUL <type_val> (300) 50
    QUO <type_val> (301) 51
    REM <type_val> (302) 52
    PRINT <type_val> (303) 21


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    Program (51)
        on left: 1
        on right: 0
    StatementList (52)
        on left: 2 3
        on right: 1 2 81
    Type <type_val> (53)
        on left: 4
        on right: 64 65 66 67 68
    TypeName <type_val> (54)
        on left: 5 6 7 8
        on right: 4
    Literal <type_val> (55)
        on left: 9 10 11 12
        on right: 59 60 65
    Statement (56)
        on left: 13 14 15 16 17 18 19 20
        on right: 2
    PrintStmt (57)
        on left: 21
        on right: 19
    Expression <type_val> (58)
        on left: 22 23
        on right: 20 21 22 62 63 67 68 69 93
    Expression1 <type_val> (59)
        on left: 24 25
        on right: 22 23 24
    Expression2 <type_val> (60)
        on left: 26 27
        on right: 24 25 26
    Expression3 <type_val> (61)
        on left: 28 29
        on right: 26 27 28
    Expression4 <type_val> (62)
        on left: 30 31
        on right: 28 29 30
    Expression5 <type_val> (63)
        on left: 32
        on right: 30 31
    UnaryExpr <type_val> (64)
        on left: 33 34
        on right: 32 34 86
    binary_op <type_val> (65)
        on left: 35 36 37 38 39
        on right: 85
    or_op <type_val> (66)
        on left: 40
        on right: 22 35
    and_op <type_val> (67)
        on left: 41
        on right: 24 36
    cmp_op <type_val> (68)
        on left: 42 43 44 45 46 47
        on right: 26 37
    add_op <type_val> (69)
        on left: 48 49
        on right: 28 38
    mul_op <type_val> (70)
        on left: 50 51 52
        on right: 30 39
    unary_op <type_val> (71)
        on left: 53 54 55
        on right: 34
    PrimaryExpr <type_val> (72)
        on left: 56 57 58
        on right: 33 63
    Operand <type_val> (73)
        on left: 59 60 61 62
        on right: 56 85
    IndexExpr <type_val> (74)
        on left: 63
        on right: 57
    ConversionExpr <type_val> (75)
        on left: 64 65
        on right: 58
    DeclarationStmt (76)
        on left: 66 67 68
        on right: 13
    AssignmentExpr (77)
        on left: 69
        on right: 70 92
    AssignmentStmt (78)
        on left: 70
        on right: 14
    assign_op <type_val> (79)
        on left: 71 72 73 74 75 76
        on right: 69
    IncDecExpr (80)
        on left: 77 78
        on right: 79 94
    IncDecStmt (81)
        on left: 79
        on right: 15
    Block (82)
        on left: 81
        on right: 82 83 84 87 88
    $@1 (83)
        on left: 80
        on right: 81
    IfStmt (84)
        on left: 82 83 84
        on right: 16 83
    Condition (85)
        on left: 85 86
        on right: 82 83 84 87 89
    WhileStmt (86)
        on left: 87
        on right: 17
    ForStmt (87)
        on left: 88
        on right: 18
    ForClause (88)
        on left: 89
        on right: 88
    InitStmt (89)
        on left: 90
        on right: 89
    PostStmt (90)
        on left: 91
        on right: 89
    SimpleExpr (91)
        on left: 92 93 94
        on right: 90 91


State 0

    0 $accept: . Program $end

    $default  reduce using rule 3 (StatementList)

    Program        go to state 1
    StatementList  go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    1 Program: StatementList .
    2 StatementList: StatementList . Statement

    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 17
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    PRINT       shift, and go to state 20
    '"'         shift, and go to state 21

    $default  reduce using rule 1 (Program)

    Type             go to state 22
    TypeName         go to state 23
    Literal          go to state 24
    Statement        go to state 25
    PrintStmt        go to state 26
    Expression       go to state 27
    Expression1      go to state 28
    Expression2      go to state 29
    Expression3      go to state 30
    Expression4      go to state 31
    Expression5      go to state 32
    UnaryExpr        go to state 33
    unary_op         go to state 34
    PrimaryExpr      go to state 35
    Operand          go to state 36
    IndexExpr        go to state 37
    ConversionExpr   go to state 38
    DeclarationStmt  go to state 39
    AssignmentExpr   go to state 40
    AssignmentStmt   go to state 41
    IncDecExpr       go to state 42
    IncDecStmt       go to state 43
    IfStmt           go to state 44
    WhileStmt        go to state 45
    ForStmt          go to state 46


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    5 TypeName: INT .

    $default  reduce using rule 5 (TypeName)


State 5

    6 TypeName: FLOAT .

    $default  reduce using rule 6 (TypeName)


State 6

    8 TypeName: BOOL .

    $default  reduce using rule 8 (TypeName)


State 7

    7 TypeName: STRING .

    $default  reduce using rule 7 (TypeName)


State 8

   62 Operand: LPAREN . Expression RPAREN
   64 ConversionExpr: LPAREN . Type RPAREN IDENT
   65               | LPAREN . Type RPAREN Literal

    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Type            go to state 48
    TypeName        go to state 23
    Literal         go to state 24
    Expression      go to state 49
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 9

   55 unary_op: NOT .

    $default  reduce using rule 55 (unary_op)


State 10

   82 IfStmt: IF . LPAREN Condition RPAREN Block
   83       | IF . LPAREN Condition RPAREN Block ELSE IfStmt
   84       | IF . LPAREN Condition RPAREN Block ELSE Block

    LPAREN  shift, and go to state 50


State 11

   88 ForStmt: FOR . LPAREN ForClause RPAREN Block

    LPAREN  shift, and go to state 51


State 12

   87 WhileStmt: WHILE . LPAREN Condition RPAREN Block

    LPAREN  shift, and go to state 52


State 13

    9 Literal: INT_LIT .

    $default  reduce using rule 9 (Literal)


State 14

   10 Literal: FLOAT_LIT .

    $default  reduce using rule 10 (Literal)


State 15

   11 Literal: STRING_LIT .

    $default  reduce using rule 11 (Literal)


State 16

   12 Literal: BOOL_LIT .

    $default  reduce using rule 12 (Literal)


State 17

   61 Operand: IDENT .
   77 IncDecExpr: IDENT . INC
   78           | IDENT . DEC

    INC  shift, and go to state 53
    DEC  shift, and go to state 54

    $default  reduce using rule 61 (Operand)


State 18

   53 unary_op: ADD .

    $default  reduce using rule 53 (unary_op)


State 19

   54 unary_op: SUB .

    $default  reduce using rule 54 (unary_op)


State 20

   21 PrintStmt: PRINT . LPAREN Expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 55


State 21

   59 Operand: '"' . Literal '"'

    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16

    Literal  go to state 56


State 22

   66 DeclarationStmt: Type . IDENT SEMICOLON
   67                | Type . IDENT ASSIGN Expression SEMICOLON
   68                | Type . IDENT LBRACK Expression RBRACK SEMICOLON

    IDENT  shift, and go to state 57


State 23

    4 Type: TypeName .

    $default  reduce using rule 4 (Type)


State 24

   60 Operand: Literal .

    $default  reduce using rule 60 (Operand)


State 25

    2 StatementList: StatementList Statement .

    $default  reduce using rule 2 (StatementList)


State 26

   19 Statement: PrintStmt .

    $default  reduce using rule 19 (Statement)


State 27

   20 Statement: Expression . SEMICOLON
   22 Expression: Expression . or_op Expression1
   69 AssignmentExpr: Expression . assign_op Expression

    ASSIGN      shift, and go to state 58
    ADD_ASSIGN  shift, and go to state 59
    SUB_ASSIGN  shift, and go to state 60
    MUL_ASSIGN  shift, and go to state 61
    QUO_ASSIGN  shift, and go to state 62
    REM_ASSIGN  shift, and go to state 63
    SEMICOLON   shift, and go to state 64
    OR          shift, and go to state 65

    or_op      go to state 66
    assign_op  go to state 67


State 28

   23 Expression: Expression1 .
   24 Expression1: Expression1 . and_op Expression2

    AND  shift, and go to state 68

    $default  reduce using rule 23 (Expression)

    and_op  go to state 69


State 29

   25 Expression1: Expression2 .
   26 Expression2: Expression2 . cmp_op Expression3

    EQL  shift, and go to state 70
    NEQ  shift, and go to state 71
    LEQ  shift, and go to state 72
    GEQ  shift, and go to state 73
    LSS  shift, and go to state 74
    GTR  shift, and go to state 75

    $default  reduce using rule 25 (Expression1)

    cmp_op  go to state 76


State 30

   27 Expression2: Expression3 .
   28 Expression3: Expression3 . add_op Expression4

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 27 (Expression2)

    add_op  go to state 79


State 31

   29 Expression3: Expression4 .
   30 Expression4: Expression4 . mul_op Expression5

    MUL  shift, and go to state 80
    QUO  shift, and go to state 81
    REM  shift, and go to state 82

    $default  reduce using rule 29 (Expression3)

    mul_op  go to state 83


State 32

   31 Expression4: Expression5 .

    $default  reduce using rule 31 (Expression4)


State 33

   32 Expression5: UnaryExpr .

    $default  reduce using rule 32 (Expression5)


State 34

   34 UnaryExpr: unary_op . UnaryExpr

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    UnaryExpr       go to state 84
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 35

   33 UnaryExpr: PrimaryExpr .
   63 IndexExpr: PrimaryExpr . LBRACK Expression RBRACK

    LBRACK  shift, and go to state 85

    $default  reduce using rule 33 (UnaryExpr)


State 36

   56 PrimaryExpr: Operand .

    $default  reduce using rule 56 (PrimaryExpr)


State 37

   57 PrimaryExpr: IndexExpr .

    $default  reduce using rule 57 (PrimaryExpr)


State 38

   58 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 58 (PrimaryExpr)


State 39

   13 Statement: DeclarationStmt .

    $default  reduce using rule 13 (Statement)


State 40

   70 AssignmentStmt: AssignmentExpr . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 41

   14 Statement: AssignmentStmt .

    $default  reduce using rule 14 (Statement)


State 42

   79 IncDecStmt: IncDecExpr . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 43

   15 Statement: IncDecStmt .

    $default  reduce using rule 15 (Statement)


State 44

   16 Statement: IfStmt .

    $default  reduce using rule 16 (Statement)


State 45

   17 Statement: WhileStmt .

    $default  reduce using rule 17 (Statement)


State 46

   18 Statement: ForStmt .

    $default  reduce using rule 18 (Statement)


State 47

   61 Operand: IDENT .

    $default  reduce using rule 61 (Operand)


State 48

   64 ConversionExpr: LPAREN Type . RPAREN IDENT
   65               | LPAREN Type . RPAREN Literal

    RPAREN  shift, and go to state 88


State 49

   22 Expression: Expression . or_op Expression1
   62 Operand: LPAREN Expression . RPAREN

    RPAREN  shift, and go to state 89
    OR      shift, and go to state 65

    or_op  go to state 66


State 50

   82 IfStmt: IF LPAREN . Condition RPAREN Block
   83       | IF LPAREN . Condition RPAREN Block ELSE IfStmt
   84       | IF LPAREN . Condition RPAREN Block ELSE Block

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    UnaryExpr       go to state 90
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 91
    IndexExpr       go to state 37
    ConversionExpr  go to state 38
    Condition       go to state 92


State 51

   88 ForStmt: FOR LPAREN . ForClause RPAREN Block

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 17
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 93
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38
    AssignmentExpr  go to state 94
    IncDecExpr      go to state 95
    ForClause       go to state 96
    InitStmt        go to state 97
    SimpleExpr      go to state 98


State 52

   87 WhileStmt: WHILE LPAREN . Condition RPAREN Block

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    UnaryExpr       go to state 90
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 91
    IndexExpr       go to state 37
    ConversionExpr  go to state 38
    Condition       go to state 99


State 53

   77 IncDecExpr: IDENT INC .

    $default  reduce using rule 77 (IncDecExpr)


State 54

   78 IncDecExpr: IDENT DEC .

    $default  reduce using rule 78 (IncDecExpr)


State 55

   21 PrintStmt: PRINT LPAREN . Expression RPAREN SEMICOLON

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 100
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 56

   59 Operand: '"' Literal . '"'

    '"'  shift, and go to state 101


State 57

   66 DeclarationStmt: Type IDENT . SEMICOLON
   67                | Type IDENT . ASSIGN Expression SEMICOLON
   68                | Type IDENT . LBRACK Expression RBRACK SEMICOLON

    ASSIGN     shift, and go to state 102
    SEMICOLON  shift, and go to state 103
    LBRACK     shift, and go to state 104


State 58

   71 assign_op: ASSIGN .

    $default  reduce using rule 71 (assign_op)


State 59

   72 assign_op: ADD_ASSIGN .

    $default  reduce using rule 72 (assign_op)


State 60

   73 assign_op: SUB_ASSIGN .

    $default  reduce using rule 73 (assign_op)


State 61

   74 assign_op: MUL_ASSIGN .

    $default  reduce using rule 74 (assign_op)


State 62

   75 assign_op: QUO_ASSIGN .

    $default  reduce using rule 75 (assign_op)


State 63

   76 assign_op: REM_ASSIGN .

    $default  reduce using rule 76 (assign_op)


State 64

   20 Statement: Expression SEMICOLON .

    $default  reduce using rule 20 (Statement)


State 65

   40 or_op: OR .

    $default  reduce using rule 40 (or_op)


State 66

   22 Expression: Expression or_op . Expression1

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression1     go to state 105
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 67

   69 AssignmentExpr: Expression assign_op . Expression

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 106
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 68

   41 and_op: AND .

    $default  reduce using rule 41 (and_op)


State 69

   24 Expression1: Expression1 and_op . Expression2

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression2     go to state 107
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 70

   42 cmp_op: EQL .

    $default  reduce using rule 42 (cmp_op)


State 71

   43 cmp_op: NEQ .

    $default  reduce using rule 43 (cmp_op)


State 72

   44 cmp_op: LEQ .

    $default  reduce using rule 44 (cmp_op)


State 73

   45 cmp_op: GEQ .

    $default  reduce using rule 45 (cmp_op)


State 74

   46 cmp_op: LSS .

    $default  reduce using rule 46 (cmp_op)


State 75

   47 cmp_op: GTR .

    $default  reduce using rule 47 (cmp_op)


State 76

   26 Expression2: Expression2 cmp_op . Expression3

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression3     go to state 108
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 77

   48 add_op: ADD .

    $default  reduce using rule 48 (add_op)


State 78

   49 add_op: SUB .

    $default  reduce using rule 49 (add_op)


State 79

   28 Expression3: Expression3 add_op . Expression4

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression4     go to state 109
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 80

   50 mul_op: MUL .

    $default  reduce using rule 50 (mul_op)


State 81

   51 mul_op: QUO .

    $default  reduce using rule 51 (mul_op)


State 82

   52 mul_op: REM .

    $default  reduce using rule 52 (mul_op)


State 83

   30 Expression4: Expression4 mul_op . Expression5

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression5     go to state 110
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 84

   34 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 34 (UnaryExpr)


State 85

   63 IndexExpr: PrimaryExpr LBRACK . Expression RBRACK

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 111
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 86

   70 AssignmentStmt: AssignmentExpr SEMICOLON .

    $default  reduce using rule 70 (AssignmentStmt)


State 87

   79 IncDecStmt: IncDecExpr SEMICOLON .

    $default  reduce using rule 79 (IncDecStmt)


State 88

   64 ConversionExpr: LPAREN Type RPAREN . IDENT
   65               | LPAREN Type RPAREN . Literal

    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 112

    Literal  go to state 113


State 89

   62 Operand: LPAREN Expression RPAREN .

    $default  reduce using rule 62 (Operand)


State 90

   86 Condition: UnaryExpr .

    $default  reduce using rule 86 (Condition)


State 91

   56 PrimaryExpr: Operand .
   85 Condition: Operand . binary_op Operand

    OR   shift, and go to state 65
    AND  shift, and go to state 68
    EQL  shift, and go to state 70
    NEQ  shift, and go to state 71
    LEQ  shift, and go to state 72
    GEQ  shift, and go to state 73
    LSS  shift, and go to state 74
    GTR  shift, and go to state 75
    ADD  shift, and go to state 77
    SUB  shift, and go to state 78
    MUL  shift, and go to state 80
    QUO  shift, and go to state 81
    REM  shift, and go to state 82

    $default  reduce using rule 56 (PrimaryExpr)

    binary_op  go to state 114
    or_op      go to state 115
    and_op     go to state 116
    cmp_op     go to state 117
    add_op     go to state 118
    mul_op     go to state 119


State 92

   82 IfStmt: IF LPAREN Condition . RPAREN Block
   83       | IF LPAREN Condition . RPAREN Block ELSE IfStmt
   84       | IF LPAREN Condition . RPAREN Block ELSE Block

    RPAREN  shift, and go to state 120


State 93

   22 Expression: Expression . or_op Expression1
   69 AssignmentExpr: Expression . assign_op Expression
   93 SimpleExpr: Expression .

    ASSIGN      shift, and go to state 58
    ADD_ASSIGN  shift, and go to state 59
    SUB_ASSIGN  shift, and go to state 60
    MUL_ASSIGN  shift, and go to state 61
    QUO_ASSIGN  shift, and go to state 62
    REM_ASSIGN  shift, and go to state 63
    OR          shift, and go to state 65

    $default  reduce using rule 93 (SimpleExpr)

    or_op      go to state 66
    assign_op  go to state 67


State 94

   92 SimpleExpr: AssignmentExpr .

    $default  reduce using rule 92 (SimpleExpr)


State 95

   94 SimpleExpr: IncDecExpr .

    $default  reduce using rule 94 (SimpleExpr)


State 96

   88 ForStmt: FOR LPAREN ForClause . RPAREN Block

    RPAREN  shift, and go to state 121


State 97

   89 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 122


State 98

   90 InitStmt: SimpleExpr .

    $default  reduce using rule 90 (InitStmt)


State 99

   87 WhileStmt: WHILE LPAREN Condition . RPAREN Block

    RPAREN  shift, and go to state 123


State 100

   21 PrintStmt: PRINT LPAREN Expression . RPAREN SEMICOLON
   22 Expression: Expression . or_op Expression1

    RPAREN  shift, and go to state 124
    OR      shift, and go to state 65

    or_op  go to state 66


State 101

   59 Operand: '"' Literal '"' .

    $default  reduce using rule 59 (Operand)


State 102

   67 DeclarationStmt: Type IDENT ASSIGN . Expression SEMICOLON

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 125
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 103

   66 DeclarationStmt: Type IDENT SEMICOLON .

    $default  reduce using rule 66 (DeclarationStmt)


State 104

   68 DeclarationStmt: Type IDENT LBRACK . Expression RBRACK SEMICOLON

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 126
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 105

   22 Expression: Expression or_op Expression1 .
   24 Expression1: Expression1 . and_op Expression2

    AND  shift, and go to state 68

    $default  reduce using rule 22 (Expression)

    and_op  go to state 69


State 106

   22 Expression: Expression . or_op Expression1
   69 AssignmentExpr: Expression assign_op Expression .

    OR  shift, and go to state 65

    $default  reduce using rule 69 (AssignmentExpr)

    or_op  go to state 66


State 107

   24 Expression1: Expression1 and_op Expression2 .
   26 Expression2: Expression2 . cmp_op Expression3

    EQL  shift, and go to state 70
    NEQ  shift, and go to state 71
    LEQ  shift, and go to state 72
    GEQ  shift, and go to state 73
    LSS  shift, and go to state 74
    GTR  shift, and go to state 75

    $default  reduce using rule 24 (Expression1)

    cmp_op  go to state 76


State 108

   26 Expression2: Expression2 cmp_op Expression3 .
   28 Expression3: Expression3 . add_op Expression4

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 26 (Expression2)

    add_op  go to state 79


State 109

   28 Expression3: Expression3 add_op Expression4 .
   30 Expression4: Expression4 . mul_op Expression5

    MUL  shift, and go to state 80
    QUO  shift, and go to state 81
    REM  shift, and go to state 82

    $default  reduce using rule 28 (Expression3)

    mul_op  go to state 83


State 110

   30 Expression4: Expression4 mul_op Expression5 .

    $default  reduce using rule 30 (Expression4)


State 111

   22 Expression: Expression . or_op Expression1
   63 IndexExpr: PrimaryExpr LBRACK Expression . RBRACK

    RBRACK  shift, and go to state 127
    OR      shift, and go to state 65

    or_op  go to state 66


State 112

   64 ConversionExpr: LPAREN Type RPAREN IDENT .

    $default  reduce using rule 64 (ConversionExpr)


State 113

   65 ConversionExpr: LPAREN Type RPAREN Literal .

    $default  reduce using rule 65 (ConversionExpr)


State 114

   85 Condition: Operand binary_op . Operand

    LPAREN      shift, and go to state 128
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    '"'         shift, and go to state 21

    Literal  go to state 24
    Operand  go to state 129


State 115

   35 binary_op: or_op .

    $default  reduce using rule 35 (binary_op)


State 116

   36 binary_op: and_op .

    $default  reduce using rule 36 (binary_op)


State 117

   37 binary_op: cmp_op .

    $default  reduce using rule 37 (binary_op)


State 118

   38 binary_op: add_op .

    $default  reduce using rule 38 (binary_op)


State 119

   39 binary_op: mul_op .

    $default  reduce using rule 39 (binary_op)


State 120

   82 IfStmt: IF LPAREN Condition RPAREN . Block
   83       | IF LPAREN Condition RPAREN . Block ELSE IfStmt
   84       | IF LPAREN Condition RPAREN . Block ELSE Block

    LBRACE  shift, and go to state 130

    Block  go to state 131


State 121

   88 ForStmt: FOR LPAREN ForClause RPAREN . Block

    LBRACE  shift, and go to state 130

    Block  go to state 132


State 122

   89 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    UnaryExpr       go to state 90
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 91
    IndexExpr       go to state 37
    ConversionExpr  go to state 38
    Condition       go to state 133


State 123

   87 WhileStmt: WHILE LPAREN Condition RPAREN . Block

    LBRACE  shift, and go to state 130

    Block  go to state 134


State 124

   21 PrintStmt: PRINT LPAREN Expression RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 135


State 125

   22 Expression: Expression . or_op Expression1
   67 DeclarationStmt: Type IDENT ASSIGN Expression . SEMICOLON

    SEMICOLON  shift, and go to state 136
    OR         shift, and go to state 65

    or_op  go to state 66


State 126

   22 Expression: Expression . or_op Expression1
   68 DeclarationStmt: Type IDENT LBRACK Expression . RBRACK SEMICOLON

    RBRACK  shift, and go to state 137
    OR      shift, and go to state 65

    or_op  go to state 66


State 127

   63 IndexExpr: PrimaryExpr LBRACK Expression RBRACK .

    $default  reduce using rule 63 (IndexExpr)


State 128

   62 Operand: LPAREN . Expression RPAREN

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 47
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 49
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38


State 129

   85 Condition: Operand binary_op Operand .

    $default  reduce using rule 85 (Condition)


State 130

   81 Block: LBRACE . $@1 StatementList RBRACE

    $default  reduce using rule 80 ($@1)

    $@1  go to state 138


State 131

   82 IfStmt: IF LPAREN Condition RPAREN Block .
   83       | IF LPAREN Condition RPAREN Block . ELSE IfStmt
   84       | IF LPAREN Condition RPAREN Block . ELSE Block

    ELSE  shift, and go to state 139

    $default  reduce using rule 82 (IfStmt)


State 132

   88 ForStmt: FOR LPAREN ForClause RPAREN Block .

    $default  reduce using rule 88 (ForStmt)


State 133

   89 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 140


State 134

   87 WhileStmt: WHILE LPAREN Condition RPAREN Block .

    $default  reduce using rule 87 (WhileStmt)


State 135

   21 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON .

    $default  reduce using rule 21 (PrintStmt)


State 136

   67 DeclarationStmt: Type IDENT ASSIGN Expression SEMICOLON .

    $default  reduce using rule 67 (DeclarationStmt)


State 137

   68 DeclarationStmt: Type IDENT LBRACK Expression RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 141


State 138

   81 Block: LBRACE $@1 . StatementList RBRACE

    $default  reduce using rule 3 (StatementList)

    StatementList  go to state 142


State 139

   83 IfStmt: IF LPAREN Condition RPAREN Block ELSE . IfStmt
   84       | IF LPAREN Condition RPAREN Block ELSE . Block

    LBRACE  shift, and go to state 130
    IF      shift, and go to state 10

    Block   go to state 143
    IfStmt  go to state 144


State 140

   89 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    LPAREN      shift, and go to state 8
    NOT         shift, and go to state 9
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 17
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    '"'         shift, and go to state 21

    Literal         go to state 24
    Expression      go to state 93
    Expression1     go to state 28
    Expression2     go to state 29
    Expression3     go to state 30
    Expression4     go to state 31
    Expression5     go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    IndexExpr       go to state 37
    ConversionExpr  go to state 38
    AssignmentExpr  go to state 94
    IncDecExpr      go to state 95
    PostStmt        go to state 145
    SimpleExpr      go to state 146


State 141

   68 DeclarationStmt: Type IDENT LBRACK Expression RBRACK SEMICOLON .

    $default  reduce using rule 68 (DeclarationStmt)


State 142

    2 StatementList: StatementList . Statement
   81 Block: LBRACE $@1 StatementList . RBRACE

    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    LPAREN      shift, and go to state 8
    RBRACE      shift, and go to state 147
    NOT         shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    INT_LIT     shift, and go to state 13
    FLOAT_LIT   shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    IDENT       shift, and go to state 17
    ADD         shift, and go to state 18
    SUB         shift, and go to state 19
    PRINT       shift, and go to state 20
    '"'         shift, and go to state 21

    Type             go to state 22
    TypeName         go to state 23
    Literal          go to state 24
    Statement        go to state 25
    PrintStmt        go to state 26
    Expression       go to state 27
    Expression1      go to state 28
    Expression2      go to state 29
    Expression3      go to state 30
    Expression4      go to state 31
    Expression5      go to state 32
    UnaryExpr        go to state 33
    unary_op         go to state 34
    PrimaryExpr      go to state 35
    Operand          go to state 36
    IndexExpr        go to state 37
    ConversionExpr   go to state 38
    DeclarationStmt  go to state 39
    AssignmentExpr   go to state 40
    AssignmentStmt   go to state 41
    IncDecExpr       go to state 42
    IncDecStmt       go to state 43
    IfStmt           go to state 44
    WhileStmt        go to state 45
    ForStmt          go to state 46


State 143

   84 IfStmt: IF LPAREN Condition RPAREN Block ELSE Block .

    $default  reduce using rule 84 (IfStmt)


State 144

   83 IfStmt: IF LPAREN Condition RPAREN Block ELSE IfStmt .

    $default  reduce using rule 83 (IfStmt)


State 145

   89 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 89 (ForClause)


State 146

   91 PostStmt: SimpleExpr .

    $default  reduce using rule 91 (PostStmt)


State 147

   81 Block: LBRACE $@1 StatementList RBRACE .

    $default  reduce using rule 81 (Block)
